/* --------------------------------------------------
	:: Css3 mixins
---------------------------------------------------*/

	// css3 gradients
	@mixin gradient($from, $to) {
		background: $from; /* Old browsers */
		background: -moz-linear-gradient(top, $from 0%, #7db9e8 100%); /* FF3.6+ */
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $from), color-stop(100%, $to)); /* Chrome,Safari4+ */
		background: -webkit-linear-gradient(top, $from 0%, $to 100%); /* Chrome10+,Safari5.1+ */
		background: -o-linear-gradient(top, $from 0%, $to 100%); /* Opera 11.10+ */
		background: -ms-linear-gradient(top, $from 0%, $to 100%); /* IE10+ */
		background: linear-gradient(to bottom, $from 0%, $to 100%); /* W3C */
		/*filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to, GradientType=0);*/ /* IE6-9 */
	}

	// Border Radius
    @mixin border-radius($radius, $is-important: false) {
		@if $is-important {
			-webkit-border-radius: $radius !important;
			   -moz-border-radius: $radius !important;
                    border-radius: $radius !important;
		} @else {
			-webkit-border-radius: $radius;
			   -moz-border-radius: $radius;
                    border-radius: $radius;
		}

    }

    // Single Corner Border Radius
    @mixin border-top-left-radius($radius) {
		-webkit-border-top-left-radius: $radius;
            -moz-border-radius-topleft: $radius;
                border-top-left-radius: $radius;
    }
    @mixin border-top-right-radius($radius) {
		-webkit-border-top-right-radius: $radius;
            -moz-border-radius-topright: $radius;
                border-top-right-radius: $radius;
    }
    @mixin border-bottom-right-radius($radius) {
		-webkit-border-bottom-right-radius: $radius;
            -moz-border-radius-bottomright: $radius;
                border-bottom-right-radius: $radius;
    }
    @mixin border-bottom-left-radius($radius) {
		-webkit-border-bottom-left-radius: $radius;
            -moz-border-radius-bottomleft: $radius;
                border-bottom-left-radius: $radius;
    }

    // Single Side Border Radius
    @mixin border-top-radius($radius) {
		@include border-top-right-radius($radius);
		@include border-top-left-radius($radius);
    }
    @mixin border-right-radius($radius) {
		@include border-top-right-radius($radius);
		@include border-bottom-right-radius($radius);
    }
    @mixin border-bottom-radius($radius) {
		@include border-bottom-right-radius($radius);
		@include border-bottom-left-radius($radius);
    }
    @mixin border-left-radius($radius) {
		@include border-top-left-radius($radius);
		@include border-bottom-left-radius($radius);
    }

    // Drop shadows
    @mixin box-shadow($shadow) {
		-webkit-box-shadow: $shadow;
           -moz-box-shadow: $shadow;
                box-shadow: $shadow;
    }



	// Transitions
	@mixin transition($transition) {
		-webkit-transition: $transition;
		   -moz-transition: $transition;
		    -ms-transition: $transition;
		     -o-transition: $transition;
			    transition: $transition;
	}
	@mixin transition-delay($transition-delay) {
		-webkit-transition-delay: $transition-delay;
		   -moz-transition-delay: $transition-delay;
		    -ms-transition-delay: $transition-delay;
		     -o-transition-delay: $transition-delay;
			    transition-delay: $transition-delay;
	}
	@mixin transition-property($property) {
		-webkit-transition-property: $property;
		   -moz-transition-property: $property;
			-ms-transition-property: $property;
			 -o-transition-property: $property;
				transition-property: $property;
	}
	@mixin transition-duration($duration) {
		-webkit-transition-duration: $duration;
		   -moz-transition-duration: $duration;
			-ms-transition-duration: $duration;
			 -o-transition-duration: $duration;
				transition-duration: $duration;
	}
	@mixin transition-timing-function($easing) {
		-webkit-transition-timing-function: $easing;
		   -moz-transition-timing-function: $easing;
		    -ms-transition-timing-function: $easing;
			 -o-transition-timing-function: $easing;
				transition-timing-function: $easing;
	}

	// Transformations
	@mixin rotate($degrees) {
		-webkit-transform: rotate($degrees);
		   -moz-transform: rotate($degrees);
		    -ms-transform: rotate($degrees);
		     -o-transform: rotate($degrees);
		  	    transform: rotate($degrees);
	}
	@mixin scale($ratio) {
		-webkit-transform: scale($ratio);
		   -moz-transform: scale($ratio);
		    -ms-transform: scale($ratio);
		     -o-transform: scale($ratio);
			    transform: scale($ratio);
	}
	@mixin translate($x, $y) {
		-webkit-transform: translate($x, $y);
		   -moz-transform: translate($x, $y);
		    -ms-transform: translate($x, $y);
		     -o-transform: translate($x, $y);
			    transform: translate($x, $y);
	}
	@mixin skew($x, $y) {
		-webkit-transform: skew($x, $y);
		   -moz-transform: skew($x, $y);
		    -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
		     -o-transform: skew($x, $y);
			    transform: skew($x, $y);

		-webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
	}
	@mixin translate3d($x, $y, $z) {
		-webkit-transform: translate3d($x, $y, $z);
		   -moz-transform: translate3d($x, $y, $z);
		    -ms-transform: translate3d($x, $y, $z);
		     -o-transform: translate3d($x, $y, $z);
			    transform: translate3d($x, $y, $z);
	}
	@mixin transform-origin($origin) {
		-webkit-transform-origin: $origin;
		   -moz-transform-origin: $origin;
			-ms-transform-origin: $origin;
			 -o-transform-origin: $origin;
				transform-origin: $origin;
	}

	// Backface visibility
	// Prevent browsers from flickering when using CSS 3D transforms.
	// Default value is `visible`, but can be changed to `hidden
	// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
	@mixin backface-visibility($visibility){
		-webkit-backface-visibility: $visibility;
		   -moz-backface-visibility: $visibility;
				backface-visibility: $visibility;
	}

	// Background clipping
	// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
	@mixin background-clip($clip) {
		-webkit-background-clip: $clip;
		   -moz-background-clip: $clip;
			    background-clip: $clip;
	}

	// Background sizing
	@mixin background-size($size) {
		-webkit-background-size: $size;
		   -moz-background-size: $size;
		     -o-background-size: $size;
			    background-size: $size;
	}


	// Box sizing
	@mixin box-sizing($boxmodel) {
		-webkit-box-sizing: $boxmodel;
		   -moz-box-sizing: $boxmodel;
			    box-sizing: $boxmodel;
	}

	// User select
	// For selecting text on the page
	@mixin user-select($select) {
		-webkit-user-select: $select;
		   -moz-user-select: $select;
		    -ms-user-select: $select;
		     -o-user-select: $select;
			    user-select: $select;
	}

	// Create CSS Triangles in a Breeze
	// .example { @include cssTriangle(5px, #fff, bottom); }
	@mixin cssTriangle($triangleSize, $triangleColor, $triangleDirection) {
		content: "";
		display: block;
		width: 0;
		height: 0;
		border: solid $triangleSize;
		@if ($triangleDirection == top) {
		  border-color: $triangleColor transparent transparent transparent;
		}
		@if ($triangleDirection == bottom) {
		  border-color: transparent transparent $triangleColor transparent;
		}
		@if ($triangleDirection == left) {
		  border-color: transparent transparent transparent $triangleColor;
		}
		@if ($triangleDirection == right) {
		  border-color: transparent $triangleColor transparent transparent;
		}
	}